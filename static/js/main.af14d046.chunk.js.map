{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","Searchbox","searching","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","console","log","App","onSearchChange","event","setState","searchfeild","target","value","state","fetch","then","response","json","users","filteredRobot","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA4BeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sEAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCRLK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAEtB,OACI,8BACKH,KCIEI,EAXG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,OACI,qBAAKV,UAAY,MAAjB,SACI,uBAAOA,UAAY,mCACnBW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCGTI,EATA,SAACC,GACZ,OACI,sBAAKC,MAAS,CAACC,UAAY,SAAUC,OAAS,kBAAmBC,OAAQ,QAAzE,UACKJ,EAAMK,SACNC,QAAQC,IAAIP,OCmDVQ,G,wDAhDZ,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CACVC,YAAaF,EAAMG,OAAOC,QAE9BR,QAAQC,IAAI,EAAKQ,MAAMH,cApBvB,EAAKG,MAAQ,CACT1B,OAAS,GACTuB,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACJC,MAAK,SAAAC,GACH,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAEtB,OAAQ+B,S,+BAWvB,IAAD,OAEEC,EAAgBC,KAAKP,MAAM1B,OAAOkC,QAAO,SAAAlC,GAC3C,OAAOA,EAAOP,KAAK0C,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAGrE,OAAgC,IAA7BF,KAAKP,MAAM1B,OAAOqC,OACV,yCAGP,sBAAKzC,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,UAAa2B,KAAKb,iBAC7B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAASgC,a,GAzCrBM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.af14d046.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Without destructuring\r\n// const Card = (props) => {\r\n//     return(\r\n//         <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n//             <img alt='Robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n//             <div>\r\n//                 <h2>{props.name}</h2>\r\n//                 <p>{props.email}</p>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// With Destructuring\r\nconst Card = ({ name, email, id }) => {\r\n    return(\r\n        <div className='bg-light-blue dib br3 pa3 ma2 grow ba bw2 b--near-black shadow-5 tc'>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n    return(\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({ searching }) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n            <input className = 'pa3 ba b--green bg-lightest-blue' \r\n            type = 'search' \r\n            placeholder = 'Search Robots'\r\n            onChange = {searching} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY : 'scroll', border : '3px solid black', height: '80vh'}}>\r\n            {props.children}\r\n            {console.log(props)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component }from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport Searchbox from '../components/Searchbox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n\r\n   constructor() {\r\n       super()\r\n       this.state = {\r\n           robots : [],\r\n           searchfeild: ''\r\n        }\r\n   }\r\n\r\n   componentDidMount() {\r\n       fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> {\r\n           return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({ robots: users })\r\n        })\r\n   }\r\n\r\n   onSearchChange = (event) => {\r\n       this.setState({\r\n           searchfeild: event.target.value\r\n       })\r\n       console.log(this.state.searchfeild)\r\n    }\r\n\r\n    render(){\r\n\r\n        const filteredRobot = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfeild.toLowerCase())\r\n        })\r\n\r\n        if(this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return(\r\n            <div className = 'tc'>\r\n                <h1 className = 'f1'>Robofriends</h1>\r\n                <Searchbox searching = {this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardList robots= {filteredRobot} />\r\n                </Scroll>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}